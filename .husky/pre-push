#!/usr/bin/env sh
# Enforce using `pnpm push` for all pushes. If user runs a raw `git push`,
# automatically execute `pnpm push` (with a loop guard) and cancel the outer push
# to avoid double pushing.
set -eu

# Already inside pnpm push -> allow.
if [ "${PNPM_PUSH_RUNNING:-}" = "1" ]; then
  echo "[pre-push] pnpm push context detected; allowing push."
  exit 0
fi

# Emergency bypass knobs (use sparingly)
if [ "${ALLOW_DIRECT_PUSH:-}" = "1" ] || [ "${HUSKY_BYPASS:-}" = "1" ]; then
  echo "[pre-push] Bypass enabled (ALLOW_DIRECT_PUSH/HUSKY_BYPASS). Proceeding with raw push."
  exit 0
fi

echo "[pre-push] Detected raw git push. Running 'pnpm push' (quality gate) ..."

# Ensure pnpm exists
if ! command -v pnpm >/dev/null 2>&1; then
  echo "[pre-push] pnpm is not installed or not in PATH." >&2
  echo "           Install pnpm: https://pnpm.io/installation" >&2
  echo "           Or bypass once: ALLOW_DIRECT_PUSH=1 git push" >&2
  exit 1
fi

# Run the quality gate. This inner push will re-enter this hook with
# PNPM_PUSH_RUNNING=1 (set by the push helper) to prevent recursion.
if ! PNPM_PUSH_RUNNING=1 pnpm push; then
  code=$?
  echo "[pre-push] 'pnpm push' failed (exit $code). Aborting outer push." >&2
  exit "$code"
fi

echo "[pre-push] 'pnpm push' completed. Cancelling outer push to avoid double-pushing."
exit 1
