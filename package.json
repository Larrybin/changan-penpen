{
    "name": "next-cf-app",
    "version": "0.1.0",
    "private": true,
    "scripts": {
        "dev": "next dev",
        "prebuild": "pnpm run fix:i18n && pnpm run config:headers",
        "build": "next build",
        "start": "next start",
        "wrangler:dev": "npx wrangler dev",
        "dev:cf": "cross-env-shell \"npx @opennextjs/cloudflare build && wrangler dev\"",
        "dev:remote": "cross-env-shell \"npx @opennextjs/cloudflare build && wrangler dev --remote\"",
        "prebuild:cf": "node scripts/prebuild-cf.mjs && pnpm run config:headers",
        "build:cf": "npx @opennextjs/cloudflare build",
        "deploy:cf": "npx @opennextjs/cloudflare deploy",
        "deploy": "npx @opennextjs/cloudflare deploy",
        "openapi:generate": "pnpm exec tsx scripts/generate-openapi.ts",
        "openapi:check": "pnpm exec tsx scripts/generate-openapi.ts --check",
        "openapi:lint": "pnpm exec spectral lint --fail-severity=warn --ruleset=spectral.yaml public/openapi.json",
        "db:generate": "drizzle-kit generate",
        "db:generate:named": "drizzle-kit generate --name",
        "db:migrate:local": "wrangler d1 migrations apply next-cf-app --local",
        "db:migrate:prod": "wrangler d1 migrations apply next-cf-app --remote",
        "db:studio": "drizzle-kit studio",
        "db:studio:local": "drizzle-kit studio --config=drizzle.local.config.ts",
        "db:inspect:local": "wrangler d1 execute next-cf-app --local --command=\"SELECT name FROM sqlite_master WHERE type='table';\"",
        "db:inspect:prod": "wrangler d1 execute next-cf-app --remote --command=\"SELECT name FROM sqlite_master WHERE type='table';\"",
        "db:reset:local": "wrangler d1 execute next-cf-app --local --command=\"DROP TABLE IF EXISTS todos;\" && pnpm run db:migrate:local",
        "cf:secret": "npx wrangler secret put",
        "cf-typegen": "pnpm exec wrangler types && pnpm exec wrangler types --env-interface CloudflareEnv ./cloudflare-env.d.ts",
        "lint": "pnpm exec biome check . --write --unsafe",
        "biome:check": "pnpm exec biome check .",
        "biome:apply": "pnpm exec biome check . --write --unsafe",
        "typecheck": "pnpm run cf-typegen && pnpm exec tsc --noEmit",
        "typecheck:tests": "pnpm exec tsc --noEmit --project tsconfig.test.json",
        "check:all": "node scripts/check-all.mjs",
        "push": "node -e \"const fs=require('fs');const p='scripts/push-fix2.mjs';if(!fs.existsSync(p)){const t='scripts/push-fix2.template.mjs';if(fs.existsSync(t)){fs.cpSync(t,p);console.log('[push] restored local helper from template');}else{console.error('[push] missing local helper and template');process.exit(1);}}\" && node scripts/push-fix2.mjs",
        "test": "vitest run",
        "test:ci": "vitest run --reporter=dot",
        "test:ui-regression": "pnpm exec vitest run --coverage.enabled=false src/components/ui/__tests__/*.test.tsx src/modules/auth/components/__tests__/*.test.tsx tests/e2e/**/*.test.tsx",
        "analyze:bundle": "ANALYZE=true pnpm exec next build",
        "translate": "pnpm exec tsc --project tsconfig.translate.json && node dist/scripts/scripts/translate-locales.js",
        "translate:de": "pnpm run translate -- --target=de",
        "translate:fr": "pnpm run translate -- --target=fr",
        "translate:pt": "pnpm run translate -- --target=pt",
        "check:i18n": "node scripts/check-i18n.mjs",
        "fix:i18n": "node scripts/fix-i18n-encoding.mjs",
        "changeset": "pnpm exec changeset",
        "release:version": "pnpm exec changeset version && pnpm install --lockfile-only",
        "release:status": "pnpm exec changeset status",
        "check:docs:legacy": "node scripts/check-docs.mjs",
        "check:links": "node scripts/check-links.mjs",
        "suggest:api-index": "node scripts/suggest-api-index.mjs",
        "push:rollback": "node scripts/push-rollback.mjs",
        "check:docs": "node scripts/lib/doc-consistency-checker.mjs",
        "check:docs:strict": "DOC_STRICT_MODE=1 node scripts/lib/doc-consistency-checker.mjs",
        "check:docs:mcp": "ENABLE_MCP=1 node scripts/lib/doc-consistency-checker.mjs",
        "config:headers": "pnpm exec tsx scripts/generate-headers.ts",
        "optimize:docs": "node scripts/optimize-docs.mjs",
        "optimize:docs:check": "node scripts/optimize-docs.mjs check",
        "optimize:docs:fix": "node scripts/optimize-docs.mjs fix",
        "optimize:docs:report": "node scripts/optimize-docs.mjs report"
    },
    "dependencies": {
        "@asteasolutions/zod-to-openapi": "^8.1.0",
        "@hookform/resolvers": "^5.2.2",
        "@opennextjs/cloudflare": "^1.10.1",
        "@radix-ui/react-accordion": "^1.2.12",
        "@radix-ui/react-alert-dialog": "^1.1.15",
        "@radix-ui/react-checkbox": "^1.3.3",
        "@radix-ui/react-collapsible": "^1.1.12",
        "@radix-ui/react-dialog": "^1.1.15",
        "@radix-ui/react-dropdown-menu": "^2.1.6",
        "@radix-ui/react-label": "^2.1.7",
        "@radix-ui/react-menubar": "^1.1.5",
        "@radix-ui/react-navigation-menu": "^1.2.6",
        "@radix-ui/react-popover": "^1.1.15",
        "@radix-ui/react-radio-group": "^1.2.1",
        "@radix-ui/react-select": "^2.2.6",
        "@radix-ui/react-separator": "^1.1.7",
        "@radix-ui/react-slot": "^1.2.3",
        "@radix-ui/react-switch": "^1.1.2",
        "@radix-ui/react-tabs": "^1.1.13",
        "@radix-ui/react-tooltip": "^1.2.8",
        "@sentry/cloudflare": "^8.32.0",
        "@tanstack/react-query": "^5.62.8",
        "@tanstack/react-table": "^8.21.2",
        "@upstash/ratelimit": "^2.0.6",
        "@upstash/redis": "^1.34.7",
        "better-auth": "^1.3.27",
        "better-sqlite3": "^12.4.1",
        "class-variance-authority": "^0.7.1",
        "clsx": "^2.1.1",
        "date-fns": "^4.1.0",
        "dotenv": "^17.2.3",
        "drizzle-orm": "^0.44.6",
        "drizzle-zod": "^0.8.3",
        "lucide-react": "^0.545.0",
        "next": "15.5.4",
        "next-intl": "^4.3.12",
        "nuqs": "^2.7.1",
        "react": "19.2.0",
        "react-dom": "19.2.0",
        "react-hook-form": "^7.65.0",
        "sonner": "^2.0.7",
        "swagger-ui-react": "^5.29.4",
        "tailwind-merge": "^3.3.1",
        "zod": "^4.1.12"
    },
    "devDependencies": {
        "@babel/parser": "^7.28.4",
        "@biomejs/biome": "2.2.5",
        "@next/bundle-analyzer": "^15.5.6",
        "@stoplight/spectral-cli": "^6.15.0",
        "@tailwindcss/postcss": "^4",
        "@testing-library/jest-dom": "^6.9.1",
        "@testing-library/react": "^16.3.0",
        "@testing-library/user-event": "^14.6.1",
        "@changesets/cli": "^2.27.9",
        "@types/better-sqlite3": "^7.6.13",
        "@types/jest-axe": "^3.5.9",
        "@types/node": "^24.7.2",
        "@types/react": "^19",
        "@types/react-dom": "^19",
        "@types/swagger-ui-react": "^5.18.0",
        "@vitest/coverage-v8": "^3.2.4",
        "cross-env": "^7.0.3",
        "drizzle-kit": "^0.31.5",
        "husky": "^9",
        "jest-axe": "^10.0.0",
        "jsdom": "^27.0.0",
        "lint-staged": "^16",
        "msw": "^2.11.5",
        "tailwindcss": "^4",
        "tsx": "^4.20.6",
        "tw-animate-css": "^1.4.0",
        "typescript": "^5.9.3",
        "vitest": "^3.2.4",
        "wrangler": "^4.42.2"
    },
    "lint-staged": {
        "*.{ts,tsx,js,jsx,json,css,md}": "pnpm exec biome check --write --unsafe"
    },
    "pnpm": {
        "overrides": {
            "@standard-schema/utils": "link:stubs/standard-schema-utils",
            "esbuild": "^0.25.10",
            "prismjs": "^1.30.0"
        },
        "patchedDependencies": {
            "refractor@3.6.0": "patches/refractor@3.6.0.patch"
        }
    },
    "prepare": "husky"
}
