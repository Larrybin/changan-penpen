name: AI Auto Fix

on:
  workflow_run:
    workflows:
      - CI
      - Deploy Next.js App to Cloudflare
    types: [completed]

permissions:
  contents: write
  pull-requests: write
  actions: read

env:
  AI_AUTOFIX_MODEL: ${{ vars.AI_AUTOFIX_MODEL || vars.OPENAI_MODEL || 'gpt-4.1-mini' }}
  AI_AUTOFIX_BASE: ${{ vars.AI_AUTOFIX_BASE || vars.OPENAI_API_BASE || '' }}
  BASE_BRANCH: ${{ github.event.workflow_run.head_branch || github.event.repository.default_branch }}

jobs:
  ai-fix:
    if: ${{ github.event.workflow_run.conclusion != 'success' && secrets.OPENAI_API_KEY != '' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies (auto heal)
        run: |
          set -euo pipefail
          if ! pnpm install --frozen-lockfile; then
            echo "Frozen install failed; retrying without --frozen" >&2
            pnpm install --no-frozen-lockfile
          fi

      - name: Download failing workflow logs
        run: |
          mkdir -p logs
          gh run download ${{ github.event.workflow_run.id }} --repo ${{ github.repository }} --dir logs || echo "No logs downloaded"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run AI auto fix
        id: ai_fix
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_MODEL: ${{ env.AI_AUTOFIX_MODEL }}
          OPENAI_API_BASE: ${{ env.AI_AUTOFIX_BASE }}
          WORKFLOW_RUN_ID: ${{ github.event.workflow_run.id }}
          WORKFLOW_HEAD_SHA: ${{ github.event.workflow_run.head_sha }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: node scripts/ai-auto-fix.mjs

      - name: Display AI summary
        if: ${{ steps.ai_fix.outputs.summary_path != '' }}
        run: cat "${{ steps.ai_fix.outputs.summary_path }}"

      - name: Detect AI changes
        id: detect
        if: ${{ steps.ai_fix.outputs.changed == 'true' }}
        run: git status --short

      - name: Commit changes
        if: ${{ steps.ai_fix.outputs.changed == 'true' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin "${BASE_BRANCH}" --depth=1 || true
          git checkout -B "${BASE_BRANCH}" "origin/${BASE_BRANCH}" || git checkout "${BASE_BRANCH}"
          git add -A
          git commit -m "fix(ai): automated patch after failed run #${{ github.event.workflow_run.id }}"

      - name: Create pull request with AI fix
        if: ${{ steps.ai_fix.outputs.changed == 'true' }}
        uses: peter-evans/create-pull-request@v6
        with:
          base: ${{ env.BASE_BRANCH }}
          branch: ai-autofix/${{ github.event.workflow_run.id }}
          title: "fix(ai): auto-generated fix for failed run #${{ github.event.workflow_run.id }}"
          commit-message: "fix(ai): auto-generated fix for failed run #${{ github.event.workflow_run.id }}"
          body-path: ${{ steps.ai_fix.outputs.summary_path }}
          labels: ai-autofix,ci,ai-generated
          draft: true
          delete-branch: true

      - name: Upload AI summary
        if: ${{ steps.ai_fix.outputs.summary_path != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: ai-fix-summary-${{ github.event.workflow_run.id }}
          path: ${{ steps.ai_fix.outputs.summary_path }}
