name: CI

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - main
    paths-ignore:
      - README.md
      - docs/**
  pull_request:
    branches-ignore:
      - main
    paths-ignore:
      - README.md
      - docs/**
  workflow_call:

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '9'
  NEXT_PUBLIC_APP_URL: ${{ vars.NEXT_PUBLIC_APP_URL || 'http://localhost:3000' }}
  # Minimal starting thresholds; raise over time
  COV_LINES: '3'
  COV_STATEMENTS: '3'
  COV_BRANCHES: '10'
  COV_FUNCTIONS: '10'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Setup pnpm
        uses: pnpm/action-setup@36de12bed180fa130ed56a35e7344f2fa7a820ab
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies (composite)
        uses: ./.github/actions/install-and-heal

      - name: Cache Next.js build cache
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('pnpm-lock.yaml') }}-${{ hashFiles('next.config.*', 'package.json', 'tsconfig.json', 'tsconfig.*.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('pnpm-lock.yaml') }}-

      - name: Run i18n normalization
        run: pnpm run fix:i18n

      - name: Ensure i18n is normalized (no diff)
        run: |
          git diff --exit-code || (echo "i18n files not normalized. Run 'pnpm run fix:i18n' and commit changes." && exit 1)

      - name: Lint (Biome)
        run: pnpm exec biome check .

      - name: Type check (tsc)
        run: pnpm exec tsc --noEmit

      - name: Test (Vitest with coverage)
        run: pnpm test -- --coverage

      - name: Upload coverage artifact (HTML)
        if: always()
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882
        with:
          name: coverage-html
          path: coverage
          if-no-files-found: warn

      - name: Check coverage thresholds (JSON summary)
        if: always()
        run: |
          node -e "
            const fs = require('fs');
            const path = require('path');
            const sumPath = path.join(process.cwd(), 'coverage', 'coverage-summary.json');
            if (!fs.existsSync(sumPath)) {
              console.error('coverage-summary.json not found at', sumPath);
              process.exit(1);
            }
            const d = JSON.parse(fs.readFileSync(sumPath, 'utf8'));
            const t = {
              lines: Number(process.env.COV_LINES || 0),
              statements: Number(process.env.COV_STATEMENTS || 0),
              branches: Number(process.env.COV_BRANCHES || 0),
              functions: Number(process.env.COV_FUNCTIONS || 0),
            };
            const cur = {
              lines: d.total.lines.pct,
              statements: d.total.statements.pct,
              branches: d.total.branches.pct,
              functions: d.total.functions.pct,
            };
            const ok = cur.lines >= t.lines && cur.statements >= t.statements && cur.branches >= t.branches && cur.functions >= t.functions;
            console.log('Coverage current:', cur, 'thresholds:', t);
            if (!ok) {
              console.error('Coverage below thresholds');
              process.exit(1);
            }
          "

      - name: Show NEXT_PUBLIC_APP_URL (diagnostic)
        run: echo "NEXT_PUBLIC_APP_URL=$NEXT_PUBLIC_APP_URL"

      - name: Build (Next.js)
        run: pnpm build


